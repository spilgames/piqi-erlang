#!/bin/sh

set -e
#set -x


if [ -d "$REBAR_DEPS_DIR" ]
then
        true
elif [ -d ../../deps ]
then
        REBAR_DEPS_DIR=../../deps
elif [ -d deps ]
then
        REBAR_DEPS_DIR=deps
else
        echo "can't find rebar 'deps' directory around `pwd`" 1>&2
        exit 1
fi

export REBAR_DEPS_DIR


ARCH_SUFFIX="`uname -s`-`uname -m`"
BINDIR=priv/bin-$ARCH_SUFFIX


if [ ! -x $BINDIR/piqi -o ! -x $BINDIR/piqic ]
then
    # build Piqi

	if [ ! `which ocaml` ] ; then
		echo "You need to install ocaml to build piqi"
		exit 1
	fi
	if [ ! `which protoc` ] ; then
		echo "You need to install protoc (google protocol buffers) to build piqi"
		exit 1
	fi
	if [ ! `which ocamlfind` ] ; then
		echo "You need to install ocaml-findlib to build piqi"
		exit 1
	fi
	if [ ! `which camlp4orf` ] ; then
		echo "You need to install ocaml-camlp4-devel to build piqi"
		exit 1
	fi
    cd $REBAR_DEPS_DIR/piqi_src
    . ./setenv.sh
    make distclean
    make deps
    make
    cd -

    # install the binaries
    mkdir -p $BINDIR

    cp $REBAR_DEPS_DIR/piqi_src/piqic/piqic $BINDIR/piqic
    strip $BINDIR/piqic

    cp $REBAR_DEPS_DIR/piqi_src/piqi-tools/piqi $BINDIR/piqi
    strip $BINDIR/piqi
fi

# Make the links to the PIQI_SRC before we start compiling.
# This is important for Deployar situation, since the directory
# structure inside and outside the Mock environment is different!
RESOLVED_SRC_DIR="`readlink -f $REBAR_DEPS_DIR/piqi_src/piqi-erlang/src`"
RESOLVED_INC_DIR="`readlink -f $REBAR_DEPS_DIR/piqi_src/piqi-erlang/include`"

rm -f src
ln -sf $RESOLVED_SRC_DIR

rm -f include
ln -sf $RESOLVED_INC_DIR
